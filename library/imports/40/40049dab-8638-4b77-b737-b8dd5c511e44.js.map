{"version":3,"sources":["..\\..\\..\\..\\assets\\scripts/assets\\scripts\\Player.js"],"names":["cc","Class","extends","Component","onLoad","jumpAction","setJumpAction","node","runAction","accLeft","accRight","xSpeed","setInputControl","properties","jumpHeight","jumpDuration","maxMoveSpeed","accel","jumpUp","moveBy","p","easing","easeCubicActionOut","jumpDown","easeCubicActionIn","repeatForever","sequence","self","systemEvent","on","SystemEvent","EventType","KEY_DOWN","event","keyCode","KEY","a","d","KEY_UP","update","dt","Math","abs","x","start"],"mappings":"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","file":"Player.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n    onLoad: function () {\r\n        // 初始化跳跃动作\r\n        this.jumpAction = this.setJumpAction();\r\n        this.node.runAction(this.jumpAction);\r\n        \r\n            // 加速度方向开关\r\n            this.accLeft = false;\r\n            this.accRight = false;\r\n            // 主角当前水平方向速度\r\n            this.xSpeed = 0;\r\n    \r\n            // 初始化键盘输入监听\r\n            this.setInputControl();\r\n    },\r\n    properties: {\r\n        // 主角跳跃高度\r\n        jumpHeight: 0,\r\n        // 主角跳跃持续时间\r\n        jumpDuration: 0,\r\n        // 最大移动速度\r\n        maxMoveSpeed: 0,\r\n        // 加速度\r\n        accel: 0,\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n    },\r\n    setJumpAction: function () {\r\n        // 跳跃上升\r\n        var jumpUp = cc.moveBy(this.jumpDuration, cc.p(0, this.jumpHeight)).easing(cc.easeCubicActionOut());\r\n        // 下落\r\n        var jumpDown = cc.moveBy(this.jumpDuration, cc.p(0, -this.jumpHeight)).easing(cc.easeCubicActionIn());\r\n        // 不断重复\r\n        return cc.repeatForever(cc.sequence(jumpUp, jumpDown));\r\n    },\r\n    setInputControl: function () {\r\n        var self = this;\r\n        // 添加键盘事件监听\r\n        // 有按键按下时，判断是否是我们指定的方向控制键，并设置向对应方向加速\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, function (event){\r\n            switch(event.keyCode) {\r\n                case cc.KEY.a:\r\n                    self.accLeft = true;\r\n                    break;\r\n                case cc.KEY.d:\r\n                    self.accRight = true;\r\n                    break;\r\n            }\r\n        });\r\n\r\n        // 松开按键时，停止向该方向的加速\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, function (event){\r\n            switch(event.keyCode) {\r\n                case cc.KEY.a:\r\n                    self.accLeft = false;\r\n                    break;\r\n                case cc.KEY.d:\r\n                    self.accRight = false;\r\n                    break;\r\n            }\r\n            \r\n        });\r\n    },\r\n    update: function (dt) {\r\n        // 根据当前加速度方向每帧更新速度\r\n        if (this.accLeft) {\r\n            this.xSpeed -= this.accel * dt;\r\n        } else if (this.accRight) {\r\n            this.xSpeed += this.accel * dt;\r\n        }\r\n        // 限制主角的速度不能超过最大值\r\n        if ( Math.abs(this.xSpeed) > this.maxMoveSpeed ) {\r\n            // if speed reach limit, use max speed with current direction\r\n            this.xSpeed = this.maxMoveSpeed * this.xSpeed / Math.abs(this.xSpeed);\r\n        }\r\n\r\n        // 根据当前速度更新主角的位置\r\n        this.node.x += this.xSpeed * dt;\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n"]}